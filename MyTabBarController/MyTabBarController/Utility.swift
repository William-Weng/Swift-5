//
//  Utility.swift
//  MyTabBarController
//
//  Created by William.Weng on 2021/6/7.
//

import UIKit

// MARK: - è‡ªå®šç¾©çš„Print
public func wwPrint<T>(_ msg: T, file: String = #file, method: String = #function, line: Int = #line) {
    #if DEBUG
        Swift.print("ðŸš© \((file as NSString).lastPathComponent)ï¼š\(line) - \(method) \n\t âœ… \(msg)")
    #endif
}

// MARK: - Utility (å–®ä¾‹)
final class Utility: NSObject {
    
    static let shared = Utility()
    private override init() {}
}

// MARK: - enum
extension Utility {
    
    /// NotificationName
    enum NotificationName {
        
        /// é¡¯ç¤ºçœŸå¯¦çš„å€¼
        var value: Notification.Name { return notificationName() }
        
        case _tabbarStackViews                  // åŠ ä¸Šè‡ªå®šç¾©çš„TabbarView (è‡ªå®šç¾©)
        case _tabbarDidSelected                 // è‡ªå®šç¾©çš„TabbarViewè¢«æŒ‰äº† (è‡ªå®šç¾©)
        case _firstViewControllerDidLoad        // ç¬¬ä¸€å€‹ViewControllerè¼‰å…¥äº† (è‡ªå®šç¾©)

        /// é¡¯ç¤ºçœŸå¯¦çš„å€¼ => Notification.Name
        func notificationName() -> Notification.Name {
            
            switch self {
            case ._tabbarStackViews: return Notification._name("_tabbarStackViews")
            case ._tabbarDidSelected: return Notification._name("_tabbarDidSelected")
            case ._firstViewControllerDidLoad: return Notification._name("_firstViewControllerDidLoad")
            }
        }
    }
}
